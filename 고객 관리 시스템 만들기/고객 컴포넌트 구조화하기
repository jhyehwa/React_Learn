[고객 컴포넌트 구조화하기]

	> 고객 컴포넌트 구조화하기
		■ App.js에서 Props로 전달하는 데이터를 확장
		■ id와 이미지 정보를 전달하는 데이터를 추가하기

		1. App.js에서 id와 이미지 정보 전달하기
		
		▶ const customer = {
			  'id' : 1,
			  'image' : 'http://placeimage.com/50/50/any',
			  'name' : '정혜화',
			  'birthday' : '930614',
			  'gender' : '여자',
			  'color' : '보라색'
			}
			// 위의 정보를 Customer 컴포넌트에 전달해주어야 함
			function App() {
			  return (
			    <Customer
			      id = {customer.id}
			      image = {customer.image}
			      name = {customer.name}
			      birthday = {customer.birthday}
			      gender = {customer.gender}
			      color = {customer.color}
			    />
			  );
			}
			
			export default App;
			
		2. Customer.js에서 CustomerProfile 클래스 컴포넌트 만들기
	
		▶ class CustomerProfile extends React.Component {
			    render() {
			        return (
			            <div>
			                <img src = {this.props.image} alt="profile"/>
			                <h2>{this.props.name}({this.props.id})</h2>
			            </div>
			        )
			    }
			}

	3. Customer.js에서 CustomerInfo 클래스 컴포넌트 만들기
		
		▶ class CustomerInfo extends React.Component {
			    render() {
			        return (
			            <div>
			                <p>{this.props.birthday}</p>
			                <p>{this.props.gender}</p>
			                <p>{this.props.color}</p>
			            </div>
			        )
			    }
			}
			
	4. Customer.js에서 Customer 클래스 컴포넌트 수정하기
	
		▶ class Customer extends React.Component {
			    render() {
			        return (
			            <div>
			                <CustomerProfile id = {this.props.id} image = {this.props.image} name = {this.props.name} />
			                <CustomerInfo birthday = {this.props.birthday} gender = {this.props.gender} color = {this.props.color} />
			            </div>
			        )
			    }
			}
